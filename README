=== PREPARING csv files
in yield_sys/:
- source makeXml_top.sh
To generate yield magnitude numbers
- use 'source genSubmit.sh'
- use 'source genSubmit_jd.sh'
- root -b -q JER_variation.cxx
- source addOtherHiggsUncer.sh && source addMCstat_ggF.sh
To generate yield uncertainty lines of WSI xml
- source makeXml_category.sh (ihep condor mode: use gen_makeCat.sh)

=== CREATING xml files
1)in yield_sys/:
makeXml_category.sh(too slow, use gen_makeCat.sh => jobsSub_makeCat.sh to submit condor jobs), source makeXml_category.sh -d p01 (for d = 0.01)
makeXml_top.sh

2)in shape_sys/:
makeXml_category.sh(too slow, use gen_makeCat.sh => jobsSub_makeCat.sh to submit condor jobs), source makeXml_category.sh -d p01 (for d = 0.01)
makeXml_model_bkg.sh
makeXml_model_sig.sh
makeXml_model_sig_Asi.sh

after the last 2 steps, in ./:
makeXml_category.sh(too slow, use genSubmit.sh => jobsSub.sh to submit condor jobs), source makeXml_category.sh -d p01 (for d = 0.01)

=== XML for toy MC
1)set 'bkgFuncBias_Toy' in ./makeXml_cat.sh yield_sys/makeXml_top.sh ('includeSys' could be disabled in ./makeXml_cat.sh) (adjust toy input path under 'if [ $bkgFuncBias_Toy -eq 1 ]' in ./makeXml_cat.sh if needed)
2)source duplicToy.sh (mod 'configToys' if needed) (for condor mode, use toyGen.sh)
in xmlAnaWSBuilder/run/:
3)use toyGen.sh to run WS building and fit (mod 'configToys' if needed)
4)use ToyLogNLL.sh to get NLL points

=== OO post-fit plotting
1)copy xml config directory into yield_sys/OOplot/configAllCats/
use subToSR.sh to replace MC yields in full range by in signal window
2)in StatisticsTools/:
use ./bin/cutPostFitBkg.exe to get signal window fractions of post-fit background pdf (input: xmlAnaWSBuilder/run/outAllCats_allSys/out_${dval}.root)
copy bkgSRFrac/bkgSRFrac_${dval}.txt to yield_sys/OOplot/
3)postfit_OO.py and alter_postfit_OO.py => plotsPostfit/plotMaterials_*root
4a)one can go to addupOOplot_subBkg.py and addupOOplot.py
4b)one can go to integrateInPads.py
